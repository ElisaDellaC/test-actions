on:
  issue_comment:
    types: [created]
name: rebase
jobs:
  rebase:
    name: Rebase
    if: github.event.issue.pull_request != '' && contains(github.event.comment.body, '/rebase')
    runs-on: ubuntu-latest
    env:
      URL: ${{ github.event.issue.url }}
      URL_COMMENT: ${{ github.event.issue.comments_url }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ASSIGNEE: ${{ github.event.issue.actor.login}}
    steps:
      - name: rocket
        uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/rebase'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: Checkout the latest code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Automatic Rebase
        uses: cirrus-actions/rebase@1.3
      - name: Comment PR on success
        if: ${{ success() }}     
        run: |
          curl \
            -X POST \
            $URL_COMMENT \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{"body": "/test"}'



      - uses: actions/github-script@master
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              body: 'üëã Thanks for rebasing!'
            })
     
      - name: Add label
        if: ${{ success() }}     
        shell: bash
        run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{"labels":["WIP"]}'

      - name: Comment PR on failure
        if: ${{ failure() }}     
        run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": "- [ ] ‚ùå ‚ùå ‚ùå  Automatic rebase nok ‚ùå ‚ùå ‚ùå " }'

          
